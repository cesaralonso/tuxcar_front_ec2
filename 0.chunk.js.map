{"version":3,"sources":["webpack:///./src/app/pages/reportes/reportes.module.ts","webpack:///./~/angular2-datatable/lib/DataTable.js?d326","webpack:///./~/angular2-datatable/lib/BootstrapPaginator.js?5e04","webpack:///./~/angular2-datatable/lib/DefaultSorter.js?0eee","webpack:///./~/angular2-datatable/lib/Paginator.js?d955","webpack:///./~/angular2-datatable/index.js?6478","webpack:///./~/angular2-datatable/lib/DataTableModule.js?1fde","webpack:///./src/app/pages/reportes/components/chofer-bitacora/chofer-bitacora.component.ts","webpack:///./src/app/pages/reportes/components/chofer-bitacora/chofer.service.ts","webpack:///./src/app/pages/reportes/components/permisotaxis-bitacora/permisotaxis-bitacora.component.ts","webpack:///./src/app/pages/reportes/components/permisotaxis-bitacora/permisotaxis.service.ts","webpack:///./src/app/pages/reportes/components/permisotaxis-reporte/permisotaxis-reporte.component.ts","webpack:///./src/app/pages/reportes/components/permisotaxis-reporte/permisotaxis-reporte.service.ts","webpack:///./src/app/pages/reportes/components/reportes-table/reportes-table.component.ts","webpack:///./src/app/pages/reportes/components/reportes-table/reportes.service.ts","webpack:///./src/app/pages/reportes/components/taller-bitacora/taller-bitacora.component.ts","webpack:///./src/app/pages/reportes/components/taller-bitacora/taller.service.ts","webpack:///./src/app/pages/reportes/reportes.component.ts","webpack:///./src/app/pages/reportes/reportes.routing.ts","webpack:///./src/app/pages/reportes/components/chofer-bitacora/chofer-bitacora.scss","webpack:///./src/app/pages/reportes/components/permisotaxis-bitacora/permisotaxis-bitacora.scss","webpack:///./src/app/pages/reportes/components/permisotaxis-reporte/permisotaxis-reporte.scss","webpack:///./src/app/pages/reportes/components/reportes-table/reportes-table.scss","webpack:///./src/app/pages/reportes/components/taller-bitacora/taller-bitacora.scss","webpack:///./src/app/pages/reportes/components/chofer-bitacora/chofer-bitacora.html","webpack:///./src/app/pages/reportes/components/permisotaxis-bitacora/permisotaxis-bitacora.html","webpack:///./src/app/pages/reportes/components/permisotaxis-reporte/permisotaxis-reporte.html","webpack:///./src/app/pages/reportes/components/reportes-table/reportes-table.html","webpack:///./src/app/pages/reportes/components/taller-bitacora/taller-bitacora.html","webpack:///./src/app/pages/reportes/reportes.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAgH;AACJ;AACvB;AACa;AACb;AACa;AACI;AACa;AAGxD;AAClB;AACM;AACyC;AACpB;AACjB;AACU;AACR;AACO;AACf;AACY;AACsB;AACe;AAiC9F,IAAa,cAAc;IAA3B;IACA,CAAC;IAAD,qBAAC;AAAD,CAAC;AADY,cAAc;IA/B1B,8EAAQ,CAAC;QACR,OAAO,EAAE;YACP,8DAAY;YACZ,oEAAkB;YAClB,sFAAoB;YACpB,4EAAmB;YACnB,qEAAS;YACT,oFAAe;YACf,mEAAO;YACP,oEAAe;YACf,mFAAc;YACd,yEAAoB,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC;SAC3D;QACD,YAAY,EAAE;YACZ,+EAAiB;YACjB,oHAAsB;YACtB,wIAA6B;YAC7B,uHAAwB;YACxB,uHAAwB;YACxB,qIAA4B;SAC7B;QACD,eAAe,EAAE,EAChB;QACD,SAAS,EAAE;YACT,qGAAe;YACf,2HAA2B;YAC3B,0GAAsB;YACtB,0GAAsB;YACtB,iIAA0B;SAC3B;KACF,CAAC;GACW,cAAc,CAC1B;AAD0B;;;;;;;;;ACvD3B;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uCAAuC;AAC3E;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAiD;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qC;;;;;;;;AC5KA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wTAAwT,sOAAsO,gBAAgB,sOAAsO,gBAAgB,qMAAqM,gBAAgB,qMAAqM,gBAAgB,yIAAyI,cAAc,mNAAmN,gBAAgB,mNAAmN,gBAAgB,uOAAuO,gBAAgB,uOAAuO,gBAAgB,yNAAyN,mWAAmW,MAAM;AAC31F,KAAK;AACL;AACA;AACA,8C;;;;;;;;ACxCA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yC;;;;;;;;AC/CA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE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","file":"0.chunk.js","sourcesContent":["import { PermisotaxisReporteComponent } from './components/permisotaxis-reporte/permisotaxis-reporte.component';\r\nimport { PermisotaxisReporteService } from './components/permisotaxis-reporte/permisotaxis-reporte.service';\r\nimport { TallersBitacoraService } from './components/taller-bitacora/taller.service';\r\nimport { TallersBitacoraComponent } from './components/taller-bitacora/taller-bitacora.component';\r\nimport { ChofersBitacoraService } from './components/chofer-bitacora/chofer.service';\r\nimport { ChofersBitacoraComponent } from './components/chofer-bitacora/chofer-bitacora.component';\r\nimport { PermisotaxisBitacoraService } from './components/permisotaxis-bitacora/permisotaxis.service';\r\nimport { PermisotaxisBitacoraComponent } from './components/permisotaxis-bitacora/permisotaxis-bitacora.component';\r\n\r\n\r\nimport { BootstrapModalModule } from 'ng2-bootstrap-modal';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule as AngularFormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppTranslationModule } from '../../app.translation.module';\r\nimport { NgaModule } from '../../theme/nga.module';\r\nimport { NgbRatingModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DataTableModule } from 'angular2-datatable';\r\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { routing } from './reportes.routing';\r\nimport { ReportesComponent } from './reportes.component';\r\nimport { ReportesService } from './components/reportes-table/reportes.service';\r\nimport { ReportesTableComponent } from './components/reportes-table/reportes-table.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AngularFormsModule,\r\n    AppTranslationModule,\r\n    ReactiveFormsModule,\r\n    NgaModule,\r\n    NgbRatingModule,\r\n    routing,\r\n    DataTableModule,\r\n    NgbModalModule,\r\n    BootstrapModalModule.forRoot({ container: document.body })\r\n  ],\r\n  declarations: [\r\n    ReportesComponent,\r\n    ReportesTableComponent,\r\n    PermisotaxisBitacoraComponent,\r\n    ChofersBitacoraComponent,\r\n    TallersBitacoraComponent,\r\n    PermisotaxisReporteComponent\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n    ReportesService,\r\n    PermisotaxisBitacoraService,\r\n    ChofersBitacoraService,\r\n    TallersBitacoraService,\r\n    PermisotaxisReporteService\r\n  ]\r\n})\r\nexport class ReportesModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/reportes/reportes.module.ts","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar _ = require(\"lodash\");\nvar Rx_1 = require(\"rxjs/Rx\");\nvar DataTable = (function () {\n    function DataTable(differs) {\n        this.differs = differs;\n        this.inputData = [];\n        this.sortBy = \"\";\n        this.sortOrder = \"asc\";\n        this.sortByChange = new core_1.EventEmitter();\n        this.sortOrderChange = new core_1.EventEmitter();\n        this.rowsOnPage = 1000;\n        this.activePage = 1;\n        this.mustRecalculateData = false;\n        this.onSortChange = new Rx_1.ReplaySubject(1);\n        this.onPageChange = new core_1.EventEmitter();\n        this.diff = differs.find([]).create(null);\n    }\n    DataTable.prototype.getSort = function () {\n        return { sortBy: this.sortBy, sortOrder: this.sortOrder };\n    };\n    DataTable.prototype.setSort = function (sortBy, sortOrder) {\n        if (this.sortBy !== sortBy || this.sortOrder !== sortOrder) {\n            this.sortBy = sortBy;\n            this.sortOrder = _.includes([\"asc\", \"desc\"], sortOrder) ? sortOrder : \"asc\";\n            this.mustRecalculateData = true;\n            this.onSortChange.next({ sortBy: sortBy, sortOrder: sortOrder });\n            this.sortByChange.emit(this.sortBy);\n            this.sortOrderChange.emit(this.sortOrder);\n        }\n    };\n    DataTable.prototype.getPage = function () {\n        return { activePage: this.activePage, rowsOnPage: this.rowsOnPage, dataLength: this.inputData.length };\n    };\n    DataTable.prototype.setPage = function (activePage, rowsOnPage) {\n        if (this.rowsOnPage !== rowsOnPage || this.activePage !== activePage) {\n            this.activePage = this.activePage !== activePage ? activePage : this.calculateNewActivePage(this.rowsOnPage, rowsOnPage);\n            this.rowsOnPage = rowsOnPage;\n            this.mustRecalculateData = true;\n            this.onPageChange.emit({\n                activePage: this.activePage,\n                rowsOnPage: this.rowsOnPage,\n                dataLength: this.inputData ? this.inputData.length : 0\n            });\n        }\n    };\n    DataTable.prototype.calculateNewActivePage = function (previousRowsOnPage, currentRowsOnPage) {\n        var firstRowOnPage = (this.activePage - 1) * previousRowsOnPage + 1;\n        var newActivePage = Math.ceil(firstRowOnPage / currentRowsOnPage);\n        return newActivePage;\n    };\n    DataTable.prototype.recalculatePage = function () {\n        var lastPage = Math.ceil(this.inputData.length / this.rowsOnPage);\n        this.activePage = lastPage < this.activePage ? lastPage : this.activePage;\n        this.activePage = this.activePage || 1;\n        this.onPageChange.emit({\n            activePage: this.activePage,\n            rowsOnPage: this.rowsOnPage,\n            dataLength: this.inputData.length\n        });\n    };\n    DataTable.prototype.ngOnChanges = function (changes) {\n        if (changes[\"rowsOnPage\"]) {\n            this.rowsOnPage = changes[\"rowsOnPage\"].previousValue;\n            this.setPage(this.activePage, changes[\"rowsOnPage\"].currentValue);\n            this.mustRecalculateData = true;\n        }\n        if (changes[\"sortBy\"] || changes[\"sortOrder\"]) {\n            if (!_.includes([\"asc\", \"desc\"], this.sortOrder)) {\n                console.warn(\"angular2-datatable: value for input mfSortOrder must be one of ['asc', 'desc'], but is:\", this.sortOrder);\n                this.sortOrder = \"asc\";\n            }\n            if (this.sortBy) {\n                this.onSortChange.next({ sortBy: this.sortBy, sortOrder: this.sortOrder });\n            }\n            this.mustRecalculateData = true;\n        }\n        if (changes[\"inputData\"]) {\n            this.inputData = changes[\"inputData\"].currentValue || [];\n            this.recalculatePage();\n            this.mustRecalculateData = true;\n        }\n    };\n    DataTable.prototype.ngDoCheck = function () {\n        var changes = this.diff.diff(this.inputData);\n        if (changes) {\n            this.recalculatePage();\n            this.mustRecalculateData = true;\n        }\n        if (this.mustRecalculateData) {\n            this.fillData();\n            this.mustRecalculateData = false;\n        }\n    };\n    DataTable.prototype.fillData = function () {\n        this.activePage = this.activePage;\n        this.rowsOnPage = this.rowsOnPage;\n        var offset = (this.activePage - 1) * this.rowsOnPage;\n        var data = this.inputData;\n        var sortBy = this.sortBy;\n        if (typeof sortBy === 'string' || sortBy instanceof String) {\n            data = _.orderBy(data, this.caseInsensitiveIteratee(sortBy), [this.sortOrder]);\n        }\n        else {\n            data = _.orderBy(data, sortBy, [this.sortOrder]);\n        }\n        data = _.slice(data, offset, offset + this.rowsOnPage);\n        this.data = data;\n    };\n    DataTable.prototype.caseInsensitiveIteratee = function (sortBy) {\n        return function (row) {\n            var value = row;\n            for (var _i = 0, _a = sortBy.split('.'); _i < _a.length; _i++) {\n                var sortByProperty = _a[_i];\n                if (value) {\n                    value = value[sortByProperty];\n                }\n            }\n            if (value && typeof value === 'string' || value instanceof String) {\n                return value.toLowerCase();\n            }\n            return value;\n        };\n    };\n    return DataTable;\n}());\n__decorate([\n    core_1.Input(\"mfData\"),\n    __metadata(\"design:type\", Array)\n], DataTable.prototype, \"inputData\", void 0);\n__decorate([\n    core_1.Input(\"mfSortBy\"),\n    __metadata(\"design:type\", Object)\n], DataTable.prototype, \"sortBy\", void 0);\n__decorate([\n    core_1.Input(\"mfSortOrder\"),\n    __metadata(\"design:type\", Object)\n], DataTable.prototype, \"sortOrder\", void 0);\n__decorate([\n    core_1.Output(\"mfSortByChange\"),\n    __metadata(\"design:type\", Object)\n], DataTable.prototype, \"sortByChange\", void 0);\n__decorate([\n    core_1.Output(\"mfSortOrderChange\"),\n    __metadata(\"design:type\", Object)\n], DataTable.prototype, \"sortOrderChange\", void 0);\n__decorate([\n    core_1.Input(\"mfRowsOnPage\"),\n    __metadata(\"design:type\", Object)\n], DataTable.prototype, \"rowsOnPage\", void 0);\n__decorate([\n    core_1.Input(\"mfActivePage\"),\n    __metadata(\"design:type\", Object)\n], DataTable.prototype, \"activePage\", void 0);\nDataTable = __decorate([\n    core_1.Directive({\n        selector: 'table[mfData]',\n        exportAs: 'mfDataTable'\n    }),\n    __metadata(\"design:paramtypes\", [core_1.IterableDiffers])\n], DataTable);\nexports.DataTable = DataTable;\n//# sourceMappingURL=DataTable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-datatable/lib/DataTable.js\n// module id = 1523\n// module chunks = 0 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar DataTable_1 = require(\"./DataTable\");\nvar _ = require(\"lodash\");\nvar BootstrapPaginator = (function () {\n    function BootstrapPaginator() {\n        this.rowsOnPageSet = [];\n        this.minRowsOnPage = 0;\n    }\n    BootstrapPaginator.prototype.ngOnChanges = function (changes) {\n        if (changes.rowsOnPageSet) {\n            this.minRowsOnPage = _.min(this.rowsOnPageSet);\n        }\n    };\n    return BootstrapPaginator;\n}());\n__decorate([\n    core_1.Input(\"rowsOnPageSet\"),\n    __metadata(\"design:type\", Object)\n], BootstrapPaginator.prototype, \"rowsOnPageSet\", void 0);\n__decorate([\n    core_1.Input(\"mfTable\"),\n    __metadata(\"design:type\", DataTable_1.DataTable)\n], BootstrapPaginator.prototype, \"mfTable\", void 0);\nBootstrapPaginator = __decorate([\n    core_1.Component({\n        selector: \"mfBootstrapPaginator\",\n        template: \"\\n    <mfPaginator #p [mfTable]=\\\"mfTable\\\">\\n        <ul class=\\\"pagination\\\" *ngIf=\\\"p.dataLength > p.rowsOnPage\\\">\\n            <li class=\\\"page-item\\\" [class.disabled]=\\\"p.activePage <= 1\\\" (click)=\\\"p.setPage(1)\\\">\\n                <a class=\\\"page-link\\\" style=\\\"cursor: pointer\\\">&laquo;</a>\\n            </li>\\n            <li class=\\\"page-item\\\" *ngIf=\\\"p.activePage > 4 && p.activePage + 1 > p.lastPage\\\" (click)=\\\"p.setPage(p.activePage - 4)\\\">\\n                <a class=\\\"page-link\\\" style=\\\"cursor: pointer\\\">{{p.activePage-4}}</a>\\n            </li>\\n            <li class=\\\"page-item\\\" *ngIf=\\\"p.activePage > 3 && p.activePage + 2 > p.lastPage\\\" (click)=\\\"p.setPage(p.activePage - 3)\\\">\\n                <a class=\\\"page-link\\\" style=\\\"cursor: pointer\\\">{{p.activePage-3}}</a>\\n            </li>\\n            <li class=\\\"page-item\\\" *ngIf=\\\"p.activePage > 2\\\" (click)=\\\"p.setPage(p.activePage - 2)\\\">\\n                <a class=\\\"page-link\\\" style=\\\"cursor: pointer\\\">{{p.activePage-2}}</a>\\n            </li>\\n            <li class=\\\"page-item\\\" *ngIf=\\\"p.activePage > 1\\\" (click)=\\\"p.setPage(p.activePage - 1)\\\">\\n                <a class=\\\"page-link\\\" style=\\\"cursor: pointer\\\">{{p.activePage-1}}</a>\\n            </li>\\n            <li class=\\\"page-item active\\\">\\n                <a class=\\\"page-link\\\" style=\\\"cursor: pointer\\\">{{p.activePage}}</a>\\n            </li>\\n            <li class=\\\"page-item\\\" *ngIf=\\\"p.activePage + 1 <= p.lastPage\\\" (click)=\\\"p.setPage(p.activePage + 1)\\\">\\n                <a class=\\\"page-link\\\" style=\\\"cursor: pointer\\\">{{p.activePage+1}}</a>\\n            </li>\\n            <li class=\\\"page-item\\\" *ngIf=\\\"p.activePage + 2 <= p.lastPage\\\" (click)=\\\"p.setPage(p.activePage + 2)\\\">\\n                <a class=\\\"page-link\\\" style=\\\"cursor: pointer\\\">{{p.activePage+2}}</a>\\n            </li>\\n            <li class=\\\"page-item\\\" *ngIf=\\\"p.activePage + 3 <= p.lastPage && p.activePage < 3\\\" (click)=\\\"p.setPage(p.activePage + 3)\\\">\\n                <a class=\\\"page-link\\\" style=\\\"cursor: pointer\\\">{{p.activePage+3}}</a>\\n            </li>\\n            <li class=\\\"page-item\\\" *ngIf=\\\"p.activePage + 4 <= p.lastPage && p.activePage < 2\\\" (click)=\\\"p.setPage(p.activePage + 4)\\\">\\n                <a class=\\\"page-link\\\" style=\\\"cursor: pointer\\\">{{p.activePage+4}}</a>\\n            </li>\\n            <li class=\\\"page-item\\\" [class.disabled]=\\\"p.activePage >= p.lastPage\\\" (click)=\\\"p.setPage(p.lastPage)\\\">\\n                <a class=\\\"page-link\\\" style=\\\"cursor: pointer\\\">&raquo;</a>\\n            </li>\\n        </ul>\\n        <ul class=\\\"pagination pull-right float-sm-right\\\" *ngIf=\\\"p.dataLength > minRowsOnPage\\\">\\n            <li class=\\\"page-item\\\" *ngFor=\\\"let rows of rowsOnPageSet\\\" [class.active]=\\\"p.rowsOnPage===rows\\\" (click)=\\\"p.setRowsOnPage(rows)\\\">\\n                <a class=\\\"page-link\\\" style=\\\"cursor: pointer\\\">{{rows}}</a>\\n            </li>\\n        </ul>\\n    </mfPaginator>\\n    \"\n    })\n], BootstrapPaginator);\nexports.BootstrapPaginator = BootstrapPaginator;\n//# sourceMappingURL=BootstrapPaginator.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-datatable/lib/BootstrapPaginator.js\n// module id = 1524\n// module chunks = 0 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar DataTable_1 = require(\"./DataTable\");\nvar DefaultSorter = (function () {\n    function DefaultSorter(mfTable) {\n        this.mfTable = mfTable;\n        this.isSortedByMeAsc = false;\n        this.isSortedByMeDesc = false;\n    }\n    DefaultSorter.prototype.ngOnInit = function () {\n        var _this = this;\n        this.mfTable.onSortChange.subscribe(function (event) {\n            _this.isSortedByMeAsc = (event.sortBy == _this.sortBy && event.sortOrder == \"asc\");\n            _this.isSortedByMeDesc = (event.sortBy == _this.sortBy && event.sortOrder == \"desc\");\n        });\n    };\n    DefaultSorter.prototype.sort = function () {\n        if (this.isSortedByMeAsc) {\n            this.mfTable.setSort(this.sortBy, \"desc\");\n        }\n        else {\n            this.mfTable.setSort(this.sortBy, \"asc\");\n        }\n    };\n    return DefaultSorter;\n}());\n__decorate([\n    core_1.Input(\"by\"),\n    __metadata(\"design:type\", String)\n], DefaultSorter.prototype, \"sortBy\", void 0);\nDefaultSorter = __decorate([\n    core_1.Component({\n        selector: \"mfDefaultSorter\",\n        template: \"\\n        <a style=\\\"cursor: pointer\\\" (click)=\\\"sort()\\\" class=\\\"text-nowrap\\\">\\n            <ng-content></ng-content>\\n            <span *ngIf=\\\"isSortedByMeAsc\\\" class=\\\"glyphicon glyphicon-triangle-top\\\" aria-hidden=\\\"true\\\"></span>\\n            <span *ngIf=\\\"isSortedByMeDesc\\\" class=\\\"glyphicon glyphicon-triangle-bottom\\\" aria-hidden=\\\"true\\\"></span>\\n        </a>\"\n    }),\n    __metadata(\"design:paramtypes\", [DataTable_1.DataTable])\n], DefaultSorter);\nexports.DefaultSorter = DefaultSorter;\n//# sourceMappingURL=DefaultSorter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-datatable/lib/DefaultSorter.js\n// module id = 1525\n// module chunks = 0 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar core_1 = require(\"@angular/core\");\nvar DataTable_1 = require(\"./DataTable\");\nvar Paginator = (function () {\n    function Paginator(injectMfTable) {\n        var _this = this;\n        this.injectMfTable = injectMfTable;\n        this.dataLength = 0;\n        this.onPageChangeSubscriber = function (event) {\n            _this.activePage = event.activePage;\n            _this.rowsOnPage = event.rowsOnPage;\n            _this.dataLength = event.dataLength;\n            _this.lastPage = Math.ceil(_this.dataLength / _this.rowsOnPage);\n        };\n    }\n    Paginator.prototype.ngOnChanges = function (changes) {\n        this.mfTable = this.inputMfTable || this.injectMfTable;\n        this.onPageChangeSubscriber(this.mfTable.getPage());\n        this.mfTable.onPageChange.subscribe(this.onPageChangeSubscriber);\n    };\n    Paginator.prototype.setPage = function (pageNumber) {\n        this.mfTable.setPage(pageNumber, this.rowsOnPage);\n    };\n    Paginator.prototype.setRowsOnPage = function (rowsOnPage) {\n        this.mfTable.setPage(this.activePage, rowsOnPage);\n    };\n    return Paginator;\n}());\n__decorate([\n    core_1.Input(\"mfTable\"),\n    __metadata(\"design:type\", DataTable_1.DataTable)\n], Paginator.prototype, \"inputMfTable\", void 0);\nPaginator = __decorate([\n    core_1.Component({\n        selector: \"mfPaginator\",\n        template: \"<ng-content></ng-content>\"\n    }),\n    __param(0, core_1.Optional()),\n    __metadata(\"design:paramtypes\", [DataTable_1.DataTable])\n], Paginator);\nexports.Paginator = Paginator;\n//# sourceMappingURL=Paginator.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-datatable/lib/Paginator.js\n// module id = 1526\n// module chunks = 0 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57","var dataTable_directive = require('./lib/DataTable');\nvar defaultSorter_directive = require('./lib/DefaultSorter');\nvar paginator_component = require('./lib/Paginator');\nvar bootstrapPaginator_component = require('./lib/BootstrapPaginator');\nvar dataTable_module = require('./lib/DataTableModule');\n\nexports.DataTable = dataTable_directive.DataTable;\nexports.DataEvent = dataTable_directive.DataEvent;\nexports.PageEvent = dataTable_directive.PageEvent;\nexports.SortEvent = dataTable_directive.SortEvent;\nexports.DefaultSorter = defaultSorter_directive.DefaultSorter;\nexports.Paginator = paginator_component.Paginator;\nexports.BootstrapPaginator = bootstrapPaginator_component.BootstrapPaginator;\nexports.DataTableModule = dataTable_module.DataTableModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-datatable/index.js\n// module id = 1527\n// module chunks = 0 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar DataTable_1 = require(\"./DataTable\");\nvar DefaultSorter_1 = require(\"./DefaultSorter\");\nvar Paginator_1 = require(\"./Paginator\");\nvar BootstrapPaginator_1 = require(\"./BootstrapPaginator\");\nvar DataTableModule = (function () {\n    function DataTableModule() {\n    }\n    return DataTableModule;\n}());\nDataTableModule = __decorate([\n    core_1.NgModule({\n        imports: [\n            common_1.CommonModule\n        ],\n        declarations: [\n            DataTable_1.DataTable,\n            DefaultSorter_1.DefaultSorter,\n            Paginator_1.Paginator,\n            BootstrapPaginator_1.BootstrapPaginator\n        ],\n        exports: [\n            DataTable_1.DataTable,\n            DefaultSorter_1.DefaultSorter,\n            Paginator_1.Paginator,\n            BootstrapPaginator_1.BootstrapPaginator\n        ]\n    })\n], DataTableModule);\nexports.DataTableModule = DataTableModule;\n//# sourceMappingURL=DataTableModule.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-datatable/lib/DataTableModule.js\n// module id = 1528\n// module chunks = 0 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57","import { PrinterService } from './../../../../shared/printer.service';\r\nimport { CommonService } from './../../../../shared/common.service';\r\nimport { ChofersBitacoraResponseInterface } from './chofer-response.interface';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DialogService } from 'ng2-bootstrap-modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ChofersBitacoraService } from './chofer.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\nselector: 'chofer-bitacora',\r\ntemplateUrl: './chofer-bitacora.html',\r\nstyleUrls: ['./chofer-bitacora.scss'],\r\n})\r\nexport class ChofersBitacoraComponent implements OnInit {\r\n    data;\r\n    filterQuery = '';\r\n    rowsOnPage = 10;\r\n    sortBy = 'idchofer';\r\n    sortOrder = 'asc';\r\n    backpage: boolean;\r\n\r\n    idchofer: number;\r\n\r\n    constructor(\r\n      private service: ChofersBitacoraService, \r\n      private toastrService: ToastrService, \r\n      private dialogService: DialogService, \r\n      private commonService: CommonService,\r\n      private printerService: PrinterService,\r\n      private route: ActivatedRoute, \r\n      private router: Router) {\r\n    }\r\n    ngOnInit() {\r\n      this.route.params.subscribe(params => {\r\n        if (params['idchofer'] !== undefined) {\r\n          const idchofer = +params['idchofer'];\r\n          this.idchofer = idchofer;\r\n          this.findByIdChofer(idchofer);\r\n          this.backpage = true;\r\n        }\r\n\r\n      });\r\n    }\r\n    backPage() {\r\n        window.history.back();\r\n    }\r\n    private findByIdChofer(id: number): void {\r\n      this.service\r\n        .findByIdChofer(id)\r\n        .subscribe(\r\n            (data: ChofersBitacoraResponseInterface) => {\r\n                if (data.success) {\r\n                this.data = data.result;\r\n                } else {\r\n                this.toastrService.error(data.message);\r\n                }\r\n            },\r\n            error => console.log(error),\r\n            () => console.log('Get all Items complete'))\r\n    }\r\n\r\n    filtrarFechas(fechaDesde, fechaHasta) {\r\n      this.service\r\n        .allFromTo(fechaDesde, fechaHasta, this.idchofer)\r\n        .subscribe(\r\n            (data: ChofersBitacoraResponseInterface) => {\r\n                if (data.success) {\r\n                  const result = _.chain(data.result)\r\n                    .sortBy('l.fecha')\r\n                    .value();\r\n\r\n                  this.data = result;\r\n                } else {\r\n                  this.toastrService.error(data.message);\r\n                }\r\n            },\r\n            error => console.log(error),\r\n            () => console.log('Get all Items complete'))\r\n    }\r\n\r\n    descargarCSV(json, reportTitle, showLabel) {\r\n      this.commonService.JSONToCSVConvertor(json, reportTitle, showLabel);\r\n    }\r\n\r\n    printReporte(chofers: any) {\r\n      this.printerService.printBitacoraChofer(chofers, +this.idchofer);\r\n    }\r\n  }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/reportes/components/chofer-bitacora/chofer-bitacora.component.ts","import { AuthService } from './../../../../shared/auth.service';\r\nimport { ChofersBitacoraResponseInterface } from './chofer-response.interface';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Configuration } from '../../../../app.constants';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class ChofersBitacoraService {\r\n    private actionUrl: string;\r\n    private headers: Headers;\r\n    private options: RequestOptions;\r\n    private endPoint: string;\r\n    constructor(\r\n        private _http: Http,\r\n        private _configuration: Configuration,\r\n        private authService: AuthService) {\r\n        this.headers = new Headers();\r\n        this.headers.append('Content-Type', 'application/json; charset=UTF-8');\r\n        this.headers.append('Authorization', 'JWT ' + this.authService.token);\r\n        this.options = new RequestOptions({ headers: this.headers });\r\n        this.endPoint = `${this._configuration.ServerWithApiUrl}chofer`;\r\n       }\r\n\r\n       allFromTo = ( fechaDesde: string, fechaHasta: string, id: number ) : Observable<ChofersBitacoraResponseInterface> => {\r\n           return this._http.get(`${this.endPoint}/bitacora-pagos/${id}/from-to/${fechaDesde}/${fechaHasta}`, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n        \r\n       findByIdChofer = ( id ) : Observable<ChofersBitacoraResponseInterface> => {\r\n           return this._http.get(`${this.endPoint}/bitacora-pagos/${id}`, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n     \r\n       private handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/reportes/components/chofer-bitacora/chofer.service.ts","import { CommonService } from './../../../../shared/common.service';\r\nimport { PrinterService } from './../../../../shared/printer.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DialogService } from 'ng2-bootstrap-modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PermisotaxisBitacoraResponseInterface } from './permisotaxis-response.interface';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { PermisotaxisBitacoraService } from './permisotaxis.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\nselector: 'permisotaxis-bitacora',\r\ntemplateUrl: './permisotaxis-bitacora.html',\r\nstyleUrls: ['./permisotaxis-bitacora.scss'],\r\n})\r\nexport class PermisotaxisBitacoraComponent implements OnInit {\r\n    data;\r\n    filterQuery = '';\r\n    rowsOnPage = 10;\r\n    numero: string;\r\n    sortBy = 'idpermisotaxi';\r\n    sortOrder = 'asc';\r\n    backpage: boolean;\r\n\r\n    idpermisotaxi: number;\r\n\r\n    constructor(\r\n      private service: PermisotaxisBitacoraService, \r\n      private toastrService: ToastrService, \r\n      private dialogService: DialogService, \r\n      private printerService: PrinterService,\r\n      private commonService: CommonService,\r\n      private route: ActivatedRoute, \r\n      private router: Router) {\r\n    }\r\n    ngOnInit() {\r\n      this.route.params.subscribe(params => {\r\n        if (params['idpermisotaxi'] !== undefined) {\r\n          const idpermisotaxi = +params['idpermisotaxi'];\r\n          this.findByIdPermisoTaxi(idpermisotaxi);\r\n          this.idpermisotaxi = idpermisotaxi;\r\n          this.backpage = true;\r\n        }\r\n\r\n      });\r\n    }\r\n    backPage() {\r\n        window.history.back();\r\n    }\r\n    private findByIdPermisoTaxi(id: number): void {\r\n      this.service\r\n        .findByIdPermisoTaxi(id)\r\n        .subscribe(\r\n            (data: PermisotaxisBitacoraResponseInterface) => {\r\n                if (data.success) {\r\n                  if (data.result[0]) {\r\n\r\n                    // OBTIENE NÚMERO DE PERMISO DE PRIMER REGISTRO ENCONTRADO\r\n                    if (data.result[0].numero) {\r\n                      this.numero = data.result[0].numero;\r\n                    }\r\n\r\n                    this.data = data.result;\r\n\r\n                  }\r\n                } else {\r\n                this.toastrService.error(data.message);\r\n                }\r\n            },\r\n            error => console.log(error),\r\n            () => console.log('Get all Items complete'))\r\n    }\r\n\r\n    filtrarFechas(fechaDesde, fechaHasta) {\r\n      this.service\r\n        .allFromTo(fechaDesde, fechaHasta, this.idpermisotaxi)\r\n        .subscribe(\r\n            (data: PermisotaxisBitacoraResponseInterface) => {\r\n                if (data.success) {\r\n                  const result = _.chain(data.result)\r\n                    .sortBy('liquidaciones.fecha')\r\n                    .value();\r\n\r\n                  this.data = result;\r\n                } else {\r\n                  this.toastrService.error(data.message);\r\n                }\r\n            },\r\n            error => console.log(error),\r\n            () => console.log('Get all Items complete'))\r\n    }\r\n    \r\n    descargarCSV(json, reportTitle, showLabel) {\r\n      this.commonService.JSONToCSVConvertor(json, reportTitle, showLabel);\r\n    }\r\n\r\n    printReporte(permisos: any) {\r\n      this.printerService.printBitacoraPermiso(permisos, this.numero);\r\n    }\r\n  }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/reportes/components/permisotaxis-bitacora/permisotaxis-bitacora.component.ts","import { AuthService } from './../../../../shared/auth.service';\r\nimport { PermisotaxisBitacoraResponseInterface } from './permisotaxis-response.interface';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Configuration } from '../../../../app.constants';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class PermisotaxisBitacoraService {\r\n    private actionUrl: string;\r\n    private headers: Headers;\r\n    private options: RequestOptions;\r\n    private endPoint: string;\r\n    constructor(\r\n        private _http: Http,\r\n        private _configuration: Configuration,\r\n        private authService: AuthService) {\r\n        this.headers = new Headers();\r\n        this.headers.append('Content-Type', 'application/json; charset=UTF-8');\r\n        this.headers.append('Authorization', 'JWT ' + this.authService.token);\r\n        this.options = new RequestOptions({ headers: this.headers });\r\n        this.endPoint = `${this._configuration.ServerWithApiUrl}permisotaxi`;\r\n       }\r\n        allFromTo = ( fechaDesde: string, fechaHasta: string, id: number ) : Observable<PermisotaxisBitacoraResponseInterface> => {\r\n           return this._http.get(`${this.endPoint}/bitacora-pagos/${id}/from-to/${fechaDesde}/${fechaHasta}`, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n        }\r\n       reporteEgresosEgresos = ( id ) : Observable<PermisotaxisBitacoraResponseInterface> => {\r\n           return this._http.get(`${this.endPoint}/reporte-ingresos-egresos-${id}`, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n       findByIdPermisoTaxi = ( id ) : Observable<PermisotaxisBitacoraResponseInterface> => {\r\n           return this._http.get(`${this.endPoint}/bitacora-pagos/${id}`, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n       private handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/reportes/components/permisotaxis-bitacora/permisotaxis.service.ts","import { PrinterService } from './../../../../shared/printer.service';\r\nimport { CommonService } from './../../../../shared/common.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DialogService } from 'ng2-bootstrap-modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PermisotaxisReporteResponseInterface } from './permisotaxis-reporte-response.interface';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { PermisotaxisReporteService } from './permisotaxis-reporte.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\nselector: 'permisotaxis-reporte',\r\ntemplateUrl: './permisotaxis-reporte.html',\r\nstyleUrls: ['./permisotaxis-reporte.scss'],\r\n})\r\nexport class PermisotaxisReporteComponent implements OnInit {\r\n    data;\r\n    filterQuery = '';\r\n    rowsOnPage = 10;\r\n    sortBy = 'idpermisotaxi';\r\n    sortOrder = 'asc';\r\n    backpage: boolean;\r\n    \r\n    liquidaciones;\r\n    ordenes;\r\n    total_ingreso;\r\n    total_egreso;\r\n    vehiculo;\r\n    \r\n    idpermisotaxi: number;\r\n    permiso: string;\r\n\r\n    constructor(\r\n      private service: PermisotaxisReporteService, \r\n      private toastrService: ToastrService, \r\n      private dialogService: DialogService, \r\n      private commonService: CommonService,\r\n      private printerService: PrinterService,\r\n      private route: ActivatedRoute, \r\n      private router: Router) {\r\n    }\r\n    ngOnInit() {\r\n      this.route.params.subscribe(params => {\r\n        if (params['idpermisotaxi'] !== undefined) {\r\n          const idpermisotaxi = +params['idpermisotaxi'];\r\n          this.findByIdPermisoTaxi(idpermisotaxi);\r\n          this.idpermisotaxi = idpermisotaxi;\r\n          this.backpage = true;\r\n        }\r\n\r\n      });\r\n    }\r\n    backPage() {\r\n        window.history.back();\r\n    }\r\n    private findByIdPermisoTaxi(id: number): void {\r\n      this.service\r\n        .findByIdPermisoTaxi(id)\r\n        .subscribe(\r\n            (data: PermisotaxisReporteResponseInterface) => {\r\n                if (data.success) {\r\n                  this.data = data.result;\r\n                  this.permiso = data.result.vehiculo[0].numero;\r\n                  this.liquidaciones = data.result.liquidaciones;\r\n                  this.ordenes = data.result.ordenes;\r\n                  this.total_ingreso = data.result.total_ingreso;\r\n                  this.total_egreso = data.result.total_egreso;\r\n                  this.vehiculo = data.result.vehiculo;\r\n                } else {\r\n                  this.toastrService.error(data.message);\r\n                }\r\n            },\r\n            error => console.log(error),\r\n            () => console.log('Get all Items complete'))\r\n    }\r\n\r\n    filtrarFechas(fechaDesde, fechaHasta) {\r\n      this.service\r\n        .allFromTo(fechaDesde, fechaHasta, this.idpermisotaxi)\r\n        .subscribe(\r\n            (data: PermisotaxisReporteResponseInterface) => {\r\n                if (data.success) {\r\n                  const result = data.result;\r\n\r\n                  this.data = data.result;\r\n                  this.permiso = data.result.vehiculo[0].numero;\r\n                  this.liquidaciones = data.result.liquidaciones;\r\n                  this.ordenes = data.result.ordenes;\r\n                  this.total_ingreso = data.result.total_ingreso;\r\n                  this.total_egreso = data.result.total_egreso;\r\n                  this.vehiculo = data.result.vehiculo;\r\n                } else {\r\n                  this.toastrService.error(data.message);\r\n                }\r\n            },\r\n            error => console.log(error),\r\n            () => console.log('Get all Items complete'))\r\n    }\r\n    \r\n    descargarCSV(json, reportTitle, showLabel) {\r\n      this.commonService.JSONToCSVConvertor(json, reportTitle, showLabel);\r\n    }\r\n\r\n    printReporte(permiso: any) {\r\n      console.log('permiso', permiso);\r\n      this.printerService.printReportePermiso(permiso);\r\n    }\r\n  }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/reportes/components/permisotaxis-reporte/permisotaxis-reporte.component.ts","import { AuthService } from './../../../../shared/auth.service';\r\nimport { PermisotaxisReporteResponseInterface } from './permisotaxis-reporte-response.interface';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Configuration } from '../../../../app.constants';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class PermisotaxisReporteService {\r\n    private actionUrl: string;\r\n    private headers: Headers;\r\n    private options: RequestOptions;\r\n    private endPoint: string;\r\n    constructor(\r\n        private _http: Http,\r\n        private _configuration: Configuration,\r\n        private authService: AuthService) {\r\n        this.headers = new Headers();\r\n        this.headers.append('Content-Type', 'application/json; charset=UTF-8');\r\n        this.headers.append('Authorization', 'JWT ' + this.authService.token);\r\n        this.options = new RequestOptions({ headers: this.headers });\r\n        this.endPoint = `${this._configuration.ServerWithApiUrl}permisotaxi`;\r\n       }\r\n\r\n        allFromTo = ( fechaDesde: string, fechaHasta: string, id: number ) : Observable<PermisotaxisReporteResponseInterface> => {\r\n           return this._http.get(`${this.endPoint}/reporte-ingresos-egresos/${id}/from-to/${fechaDesde}/${fechaHasta}`, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n        }\r\n       findByIdPermisoTaxi = ( id ) : Observable<PermisotaxisReporteResponseInterface> => {\r\n           return this._http.get(`${this.endPoint}/reporte-ingresos-egresos/${id}`, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n       private handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/reportes/components/permisotaxis-reporte/permisotaxis-reporte.service.ts","import { DialogService } from 'ng2-bootstrap-modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ReportesInterface } from './reportes.interface';\r\nimport { ReportesResponseInterface } from './reportes-response.interface';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ReportesService } from './reportes.service';\r\n@Component({\r\nselector: 'reportes-table',\r\ntemplateUrl: './reportes-table.html',\r\nstyleUrls: ['./reportes-table.scss'],\r\n})\r\nexport class ReportesTableComponent implements OnInit {\r\n    data;\r\n    filterQuery = '';\r\n    rowsOnPage = 10;\r\n    sortBy = 'idreporte';\r\n    sortOrder = 'asc';\r\n    constructor(\r\n      private service: ReportesService, \r\n      private toastrService: ToastrService, \r\n      private dialogService: DialogService) {\r\n    }\r\n    ngOnInit() {\r\n        this.getAll();\r\n    }\r\n    onDeleteConfirm(event, item): void {\r\n      if (window.confirm('¿Estas seguro de querer eliminar este registro?')) {\r\n          this.service.remove(item.idreporte)\r\n          .subscribe(\r\n              (data) => this.showToast(data),\r\n              error => console.log(error),\r\n              () => console.log('Delete completed')\r\n          );\r\n      } else {\r\n          console.log('item cancelado');\r\n      }\r\n    }\r\n    showToast(result) {\r\n      if (result.success) {\r\n        this.toastrService.success(result.message);\r\n        this.getAll();\r\n      } else {\r\n        this.toastrService.error(result.message);\r\n      }\r\n    }\r\n    private getAll(): void {\r\n      this.service\r\n        .all()\r\n        .subscribe(\r\n            (data: ReportesResponseInterface) =>  {\r\n                if (data.success) {\r\n                  this.data = data.result;\r\n                } else {\r\n                  this.toastrService.error(data.message);\r\n                }\r\n            },\r\n            error => console.log(error),\r\n            () => console.log('Get all Items complete'))\r\n    } \r\n  }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/reportes/components/reportes-table/reportes-table.component.ts","import { AuthService } from './../../../../shared/auth.service';\r\nimport { ReportesResponseInterface } from './reportes-response.interface';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { ReportesInterface } from './reportes.interface';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Configuration } from '../../../../app.constants';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class ReportesService {\r\n    private actionUrl: string;\r\n    private headers: Headers;\r\n    private options: RequestOptions;\r\n    private endPoint: string;\r\n    constructor(\r\n        private _http: Http,\r\n        private _configuration: Configuration,\r\n        private authService: AuthService) {\r\n        this.headers = new Headers();\r\n        this.headers.append('Content-Type', 'application/json; charset=UTF-8');\r\n        this.headers.append('Authorization', 'JWT ' + this.authService.token);\r\n        this.options = new RequestOptions({ headers: this.headers });\r\n        this.endPoint = `${this._configuration.ServerWithApiUrl}liquidacion/reporte`;\r\n       }\r\n       all = () : Observable<ReportesResponseInterface> => {\r\n           return this._http.get(this.endPoint, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n       findById = ( id ) : Observable<ReportesResponseInterface> => {\r\n           return this._http.get(`${this.endPoint}/${id}`, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n       update = ( reporte: ReportesInterface ) : Observable<ReportesResponseInterface> => {\r\n           return this._http.patch(this.endPoint, reporte, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n       remove= ( id ) : Observable<ReportesResponseInterface> => {\r\n           return this._http.delete(`${this.endPoint}/${id}`, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n       exist = ( id ) : Observable<ReportesResponseInterface> => {\r\n           return this._http.get(`${this.endPoint}/${id}`, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n       count = () : Observable<ReportesResponseInterface> => {\r\n           return this._http.get(`${this.endPoint}`, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n       insert = ( reporte: ReportesInterface ) : Observable<ReportesResponseInterface> => {\r\n           return this._http.post(this.endPoint, reporte, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n       private handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/reportes/components/reportes-table/reportes.service.ts","import { PrinterService } from './../../../../shared/printer.service';\r\nimport { CommonService } from './../../../../shared/common.service';\r\nimport { TallersBitacoraResponseInterface } from './taller-response.interface';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DialogService } from 'ng2-bootstrap-modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { TallersBitacoraService } from './taller.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\nselector: 'taller-bitacora',\r\ntemplateUrl: './taller-bitacora.html',\r\nstyleUrls: ['./taller-bitacora.scss'],\r\n})\r\nexport class TallersBitacoraComponent implements OnInit {\r\n    data;\r\n    backpage: boolean;\r\n\r\n    orden = [];\r\n    refaccion = [];\r\n    egresoconcepto = [];\r\n\r\n    taller: string;\r\n    total_orden_ingreso: number;\r\n    total_egresoconcepto_egreso: number;\r\n    total_refaccion_egreso: number;\r\n\r\n    total_ingreso: number;\r\n    total_egreso: number;\r\n    ganancia: number;\r\n\r\n    idtaller: number;\r\n\r\n\r\n    constructor(\r\n      private service: TallersBitacoraService, \r\n      private toastrService: ToastrService, \r\n      private dialogService: DialogService, \r\n      private route: ActivatedRoute, \r\n      private commonService: CommonService,\r\n      private printerService: PrinterService,\r\n      private router: Router) {\r\n    }\r\n    ngOnInit() {\r\n      this.route.params.subscribe(params => {\r\n        if (params['idtaller'] !== undefined) {\r\n          const idtaller = +params['idtaller'];\r\n          this.findByIdTaller(idtaller);\r\n          this.idtaller = idtaller;\r\n          this.backpage = true;\r\n        }\r\n\r\n      });\r\n    }\r\n    backPage() {\r\n        window.history.back();\r\n    }\r\n    private findByIdTaller(id: number): void {\r\n      this.service\r\n        .findByIdTaller(id)\r\n        .subscribe(\r\n            (data: TallersBitacoraResponseInterface) => {\r\n                if (data.success) {\r\n                    this.data = data.result;\r\n                    this.orden = data.result.orden;\r\n                    this.refaccion = data.result.refaccion;\r\n                    this.egresoconcepto = data.result.egresoconcepto;\r\n                    this.taller = data.result.taller;\r\n                    this.total_orden_ingreso = data.result.total_orden_ingreso;\r\n                    this.total_egresoconcepto_egreso = data.result.total_egresoconcepto_egreso;\r\n                    this.total_refaccion_egreso = data.result.total_refaccion_egreso;\r\n                    this.total_ingreso = data.result.total_ingreso;\r\n                    this.total_egreso = data.result.total_egreso;\r\n                    this.ganancia = data.result.ganancia;\r\n                } else {\r\n                  this.toastrService.error(data.message);\r\n                }\r\n            },\r\n            error => console.log(error),\r\n            () => console.log('Get all Items complete'))\r\n    }\r\n    \r\n    filtrarFechas(fechaDesde, fechaHasta) {\r\n      this.service\r\n        .allFromTo(fechaDesde, fechaHasta, this.idtaller)\r\n        .subscribe(\r\n            (data: TallersBitacoraResponseInterface) => {\r\n                if (data.success) {\r\n                  const result = _.chain(data.result)\r\n                    .sortBy('orden.fecha')\r\n                    .value();\r\n\r\n                  this.data = data.result;\r\n                  this.orden = data.result.orden;\r\n                  this.refaccion = data.result.refaccion;\r\n                  this.egresoconcepto = data.result.egresoconcepto;\r\n                  this.taller = data.result.taller;\r\n                  this.total_orden_ingreso = data.result.total_orden_ingreso;\r\n                  this.total_egresoconcepto_egreso = data.result.total_egresoconcepto_egreso;\r\n                  this.total_refaccion_egreso = data.result.total_refaccion_egreso;\r\n                  this.total_ingreso = data.result.total_ingreso;\r\n                  this.total_egreso = data.result.total_egreso;\r\n                  this.ganancia = data.result.ganancia;\r\n                } else {\r\n                  this.toastrService.error(data.message);\r\n                }\r\n            },\r\n            error => console.log(error),\r\n            () => console.log('Get all Items complete'))\r\n    }\r\n    \r\n    descargarCSV(json, reportTitle, showLabel) {\r\n      this.commonService.JSONToCSVConvertor(json, reportTitle, showLabel);\r\n    }\r\n\r\n    printReporte(taller: any) {\r\n      this.printerService.printBitacoraTaller(taller);\r\n    }\r\n  }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/reportes/components/taller-bitacora/taller-bitacora.component.ts","import { AuthService } from './../../../../shared/auth.service';\r\nimport { TallersBitacoraResponseInterface } from './taller-response.interface';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Configuration } from '../../../../app.constants';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class TallersBitacoraService {\r\n    private actionUrl: string;\r\n    private headers: Headers;\r\n    private options: RequestOptions;\r\n    private endPoint: string;\r\n    constructor(\r\n        private _http: Http,\r\n        private _configuration: Configuration,\r\n        private authService: AuthService) {\r\n        this.headers = new Headers();\r\n        this.headers.append('Content-Type', 'application/json; charset=UTF-8');\r\n        this.headers.append('Authorization', 'JWT ' + this.authService.token);\r\n        this.options = new RequestOptions({ headers: this.headers });\r\n        this.endPoint = `${this._configuration.ServerWithApiUrl}taller`;\r\n       }\r\n\r\n       allFromTo = ( fechaDesde: string, fechaHasta: string, id: number ) : Observable<TallersBitacoraResponseInterface> => {\r\n           return this._http.get(`${this.endPoint}/bitacora-ingresos-egresos/${id}/from-to/${fechaDesde}/${fechaHasta}`, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n\r\n       findByIdTaller = ( id ) : Observable<TallersBitacoraResponseInterface> => {\r\n           return this._http.get(`${this.endPoint}/bitacora-ingresos-egresos/${id}`, this.options)\r\n               .map((response: Response) => response.json())\r\n               .catch(this.handleError);\r\n       }\r\n     \r\n       private handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/reportes/components/taller-bitacora/taller.service.ts","  import { Component, OnInit } from '@angular/core';\r\n  @Component({\r\n    selector: 'reportes',\r\n    templateUrl: './reportes.html'\r\n  })\r\n  export class ReportesComponent implements OnInit {\r\n    constructor() {\r\n    }\r\n    ngOnInit() {\r\n    }\r\n  }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/reportes/reportes.component.ts","import { PermisotaxisReporteComponent } from './components/permisotaxis-reporte/permisotaxis-reporte.component';\r\nimport { TallersBitacoraComponent } from './components/taller-bitacora/taller-bitacora.component';\r\nimport { ChofersBitacoraComponent } from './components/chofer-bitacora/chofer-bitacora.component';\r\nimport { PermisotaxisBitacoraComponent } from './components/permisotaxis-bitacora/permisotaxis-bitacora.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { ReportesComponent } from './reportes.component';\r\nimport { ReportesTableComponent } from './components/reportes-table/reportes-table.component';\r\n\r\n// noinspection TypeScriptValidateTypes\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReportesComponent,\r\n    children: [\r\n      { path: 'reportes-table', component: ReportesTableComponent },\r\n      { path: 'bitacora-pagos-permiso/:idpermisotaxi', component: PermisotaxisBitacoraComponent },\r\n      { path: 'bitacora-pagos-chofer/:idchofer', component: ChofersBitacoraComponent },\r\n      { path: 'bitacora-ingresos-egresos-taller/:idtaller', component: TallersBitacoraComponent },\r\n      { path: 'reporte-ingresos-egresos-permiso/:idpermisotaxi', component: PermisotaxisReporteComponent },\r\n    ]\r\n    }\r\n  ];\r\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/reportes/reportes.routing.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host /deep/ .widgets .data-table-container {\\n  width: 100%; }\\n  :host /deep/ .widgets .data-table-container .panel-heading {\\n    margin-top: 25px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/reportes/components/chofer-bitacora/chofer-bitacora.scss\n// module id = 1773\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host /deep/ .widgets .data-table-container {\\n  width: 100%; }\\n  :host /deep/ .widgets .data-table-container .panel-heading {\\n    margin-top: 25px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/reportes/components/permisotaxis-bitacora/permisotaxis-bitacora.scss\n// module id = 1774\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host /deep/ .widgets .data-table-container {\\n  width: 100%; }\\n  :host /deep/ .widgets .data-table-container .panel-heading {\\n    margin-top: 25px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/reportes/components/permisotaxis-reporte/permisotaxis-reporte.scss\n// module id = 1775\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host /deep/ .widgets .data-table-container {\\n  width: 100%; }\\n  :host /deep/ .widgets .data-table-container .panel-heading {\\n    margin-top: 25px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/reportes/components/reportes-table/reportes-table.scss\n// module id = 1776\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host /deep/ .widgets .data-table-container {\\n  width: 100%; }\\n  :host /deep/ .widgets .data-table-container .panel-heading {\\n    margin-top: 25px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/reportes/components/taller-bitacora/taller-bitacora.scss\n// module id = 1777\n// module chunks = 0","module.exports = \"<div class='widgets'>\\r\\n    <div class='row'>\\r\\n        <ba-card title='Listado' baCardClass='with-scroll' class='data-table-container'>\\r\\n            <div class='panel panel-default'>\\r\\n                <div class=\\\"panel-heading\\\" *ngIf=\\\"backpage\\\"><h2>Chofer Bitácora de Pagos</h2></div>\\r\\n                <table class='table table-striped' [mfData]='data' #mf='mfDataTable' [mfRowsOnPage]='rowsOnPage' [(mfSortBy)]='sortBy' [(mfSortOrder)]='sortOrder'>\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <td colspan='1'>\\r\\n                                Desde Fecha Liquidada:\\r\\n                                <input class='form-control' #fechaDesde type=\\\"date\\\"/>\\r\\n                            </td>\\r\\n                            <td colspan='1'>\\r\\n                                Hasta Fecha Liquidada:\\r\\n                                <input class='form-control' #fechaHasta type=\\\"date\\\"/>\\r\\n                            </td>\\r\\n                            <td colspan='3'>\\r\\n                                <br>\\r\\n                                <button class='btn btn-sm btn-info' (click)='filtrarFechas(fechaDesde.value, fechaHasta.value)' >Filtrar por Fechas</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='fecha'>Fecha Liquidada</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='montopagado'>Pago</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='folio'>Folio</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='pago_fecha'>Fecha de Pago</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='numero'>Permiso</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='chofer'>Chofer</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='nota'>Observaciones</mfDefaultSorter>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor='let item of mf.data;  let i = index'>\\r\\n                            <td>{{ item.fecha | date:'dd/MM/y' }}</td>\\r\\n                            <td>{{ item.montopagado | currency: 'MXN' }}</td>\\r\\n                            <td>{{ item.folio }}</td>\\r\\n                            <td>{{ item.pago_fecha | date:'dd/MM/y' }}</td>\\r\\n                            <td>{{ item.numero }}</td>\\r\\n                            <td>{{ item.chofer }}</td>\\r\\n                            <td>{{ item.nota }}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                    <tfoot>\\r\\n                        <tr>\\r\\n                            <td colspan='5'>\\r\\n                                <mfBootstrapPaginator [rowsOnPageSet]='[5,10,15,25,50,100]'></mfBootstrapPaginator>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tfoot>\\r\\n                </table>\\r\\n            </div>\\r\\n        </ba-card>\\r\\n    </div>\\r\\n    <div class='row'>\\r\\n        <div class='col-sm-2' *ngIf=\\\"backpage\\\">\\r\\n            <button (click)='backPage()' class='btn btn-primary'><i class='fa fa-arrow-left'></i> Regresar</button>\\r\\n        </div>\\r\\n        <div class='col-sm-2'>\\r\\n            <button (click)='descargarCSV(data, \\\"Bitácora de Chofer\\\", true)' class='btn btn-success'><i class='fa fa-excel'></i> Descargar como CSV</button>\\r\\n        </div>\\r\\n        <div class='col-sm-2'>\\r\\n            <button title='Imprimir Reporte' (click)='printReporte(data)' class='btn btn-info'><i class='fa fa-print'></i> Imprimir Reporte</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/reportes/components/chofer-bitacora/chofer-bitacora.html\n// module id = 1879\n// module chunks = 0","module.exports = \"<div class='widgets'>\\r\\n    <div class='row'>\\r\\n        <ba-card title='Listado' baCardClass='with-scroll' class='data-table-container'>\\r\\n            <div class='panel panel-default'>\\r\\n                <div class=\\\"panel-heading\\\" *ngIf=\\\"backpage\\\"><h2>Bitácora de Pagos a Permiso {{ numero }}</h2></div>\\r\\n                <table class='table table-striped' [mfData]='data' #mf='mfDataTable' [mfRowsOnPage]='rowsOnPage' [(mfSortBy)]='sortBy' [(mfSortOrder)]='sortOrder'>\\r\\n                     <thead>\\r\\n                        <tr>\\r\\n                            <td colspan='1'>\\r\\n                                Desde Fecha Liquidada:\\r\\n                                <input class='form-control' #fechaDesde type=\\\"date\\\"/>\\r\\n                            </td>\\r\\n                            <td colspan='1'>\\r\\n                                Hasta Fecha Liquidada:\\r\\n                                <input class='form-control' #fechaHasta type=\\\"date\\\"/>\\r\\n                            </td>\\r\\n                            <td colspan='3'>\\r\\n                                <br>\\r\\n                                <button class='btn btn-sm btn-info' (click)='filtrarFechas(fechaDesde.value, fechaHasta.value)' >Filtrar por Fechas</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='fecha'>Fecha Liquidada</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='montopagado'>Pago</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='folio'>Folio</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='pago_fecha'>Fecha de Pago</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='chofer'>Chofer</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='numero'>Permiso</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 15%'>\\r\\n                                <mfDefaultSorter by='nota'>Observaciones</mfDefaultSorter>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor='let item of mf.data;  let i = index'>\\r\\n                            <td>{{ item.fecha | date:'dd/MM/y' }}</td>\\r\\n                            <td>{{ item.montopagado | currency: 'MXN' }}</td>\\r\\n                            <td>{{ item.folio }}</td>\\r\\n                            <td>{{ item.pago_fecha | date:'dd/MM/y' }}</td>\\r\\n                            <td>{{ item.chofer }}</td>\\r\\n                            <td>{{ item.numero }}</td>\\r\\n                            <td>{{ item.nota }}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                    <tfoot>\\r\\n                        <tr>\\r\\n                            <td colspan='5'>\\r\\n                                <mfBootstrapPaginator [rowsOnPageSet]='[5,10,15,25,50,100]'></mfBootstrapPaginator>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tfoot>\\r\\n                </table>\\r\\n            </div>\\r\\n        </ba-card>\\r\\n    </div>\\r\\n    <div class='row'>\\r\\n        <div class='col-sm-2' *ngIf=\\\"backpage\\\">\\r\\n            <button (click)='backPage()' class='btn btn-primary'><i class='fa fa-arrow-left'></i> Regresar</button>\\r\\n        </div>\\r\\n        <div class='col-sm-2'>\\r\\n            <button (click)='descargarCSV(data, \\\"Bitácora de Permiso\\\", true)' class='btn btn-success'><i class='fa fa-excel'></i> Descargar como CSV</button>\\r\\n        </div>\\r\\n        <div class='col-sm-2'>\\r\\n            <button title='Imprimir Reporte' (click)='printReporte(data)' class='btn btn-info'><i class='fa fa-print'></i> Imprimir Reporte</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/reportes/components/permisotaxis-bitacora/permisotaxis-bitacora.html\n// module id = 1880\n// module chunks = 0","module.exports = \"<div class='widgets'>\\r\\n    <div class='row'>\\r\\n        <ba-card title='Listado' baCardClass='with-scroll' class='data-table-container'>\\r\\n            <div class='panel panel-default'>\\r\\n                <div class=\\\"panel-heading\\\" *ngIf=\\\"backpage\\\"><h2>Reporte de Egresos para Permiso <strong> {{ permiso }} </strong></h2></div>\\r\\n\\r\\n                <div class=\\\"panel-heading\\\"><h4>Datos del Permiso</h4></div>\\r\\n                <table class='table table-striped'>\\r\\n\\r\\n                     <thead>\\r\\n                        <tr>\\r\\n                            <td colspan='1'>\\r\\n                                Desde Fecha:\\r\\n                                <input class='form-control' #fechaDesde type=\\\"date\\\"/>\\r\\n                            </td>\\r\\n                            <td colspan='1'>\\r\\n                                Hasta Fecha:\\r\\n                                <input class='form-control' #fechaHasta type=\\\"date\\\"/>\\r\\n                            </td>\\r\\n                            <td colspan='3'>\\r\\n                                <br>\\r\\n                                <button class='btn btn-sm btn-info' (click)='filtrarFechas(fechaDesde.value, fechaHasta.value)' >Filtrar por Fechas</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style='width: 14%'>\\r\\n                                <span title='numero'>Número</span>\\r\\n                            </th>\\r\\n                            <th style='width: 14%'>\\r\\n                                <span title='modelo'>Modelo</span>\\r\\n                            </th>\\r\\n                            <th style='width: 14%'>\\r\\n                                <span title='motor'>Motor</span>\\r\\n                            </th>\\r\\n                            <th style='width: 14%'>\\r\\n                                <span title='mutualidad'>Mutualidad</span>\\r\\n                            </th>\\r\\n                            <th style='width: 14%'>\\r\\n                                <span title='poliza'>Póliza</span>\\r\\n                            </th>\\r\\n                            <th style='width: 14%'>\\r\\n                                <span title='serie'>Serie</span>\\r\\n                            </th>\\r\\n                            <th style='width: 14%'>\\r\\n                                <span title='propietario'>Propietario</span>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor='let item of vehiculo;  let i = index'>\\r\\n                            <td>{{ item.numero }}</td>\\r\\n                            <td>{{ item.modelo }}</td>\\r\\n                            <td>{{ item.motor }}</td>\\r\\n                            <td>{{ item.mutualidad }}</td>\\r\\n                            <td>{{ item.poliza }}</td>\\r\\n                            <td>{{ item.serie }}</td>\\r\\n                            <td>{{ item.propietario }}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n\\r\\n                <!--<div class=\\\"panel-heading\\\"><h4>Ingreso por Liquidaciones</h4></div>\\r\\n                <table class='table table-striped'>\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style='width: 25%'>\\r\\n                                <span title='fecha'>Fecha</span>\\r\\n                            </th>\\r\\n                            <th style='width: 25%'>\\r\\n                                <span title='bonificado'>Bonificado</span>\\r\\n                            </th>\\r\\n                            <th style='width: 25%'>\\r\\n                                <span title='montopagado'>Monto Pagado</span>\\r\\n                            </th>\\r\\n                            <th style='width: 25%'>\\r\\n                                <span title='estado_idestado'>Estado</span>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor='let item of liquidaciones;  let i = index'>\\r\\n                            <td>{{ item.fecha | date: 'dd/MM/y' }}</td>\\r\\n                            <td>{{ item.bonificado | currency: 'MXN' }}</td>\\r\\n                            <td>{{ item.montopagado | currency: 'MXN' }}</td>\\r\\n                            <td>{{ item.estado_idestado}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                    <tfoot>\\r\\n                        <tr>\\r\\n                            <td colspan=\\\"4\\\" class=\\\"text-right\\\"><strong>TOTAL INGRESO: {{ total_ingreso | currency:'MXN' }}</strong></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td colspan=\\\"4\\\" class=\\\"text-right\\\">\\r\\n                                <button (click)='descargarCSV(liquidaciones, \\\"Permiso Ingreso por Liquidaciones\\\", true)' class='btn btn-sm btn-success'><i class='fa fa-excel'></i> Descargar como CSV</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tfoot>\\r\\n                </table>-->\\r\\n      \\r\\n                <div class=\\\"panel-heading\\\"><h4>Egreso por Órdenes en Taller</h4></div>\\r\\n                <table class='table table-striped'>\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style='width: 10%'>\\r\\n                                <span title='idorden'>Id Orden</span>\\r\\n                            </th>\\r\\n                            <th style='width: 10%'>\\r\\n                                <span title='fecha'>Fecha</span>\\r\\n                            </th>\\r\\n                            <th style='width: 10%'>\\r\\n                                <span title='estado_estado_idestado'>Estado</span>\\r\\n                            </th>\\r\\n                            <th style='width: 10%'>\\r\\n                                <span title='abonado'>Abonado</span>\\r\\n                            </th>\\r\\n                            <th style='width: 10%'>\\r\\n                                <span title='subtotal'>Subtotal</span>\\r\\n                            </th>\\r\\n                            <th style='width: 10%'>\\r\\n                                <span title='total'>Total</span>\\r\\n                            </th>\\r\\n                            <th style='width: 10%'>\\r\\n                                <span title='factura'>Factura</span>\\r\\n                            </th>\\r\\n                            <th style='width: 20%'>\\r\\n                                <span title='comentarios'>Comentarios</span>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor='let item of ordenes;  let i = index'>\\r\\n                            <td>{{ item.idorden }}</td>\\r\\n                            <td>{{ item.fecha | date:'dd/MM/y' }}</td>\\r\\n                            <td>{{ item.estado_estado_idestado }}</td>\\r\\n                            <td><strong>{{ item.abonado | currency: 'MXN' }}</strong></td>\\r\\n                            <td>{{ item.subtotal | currency: 'MXN' }}</td>\\r\\n                            <td>{{ item.total | currency: 'MXN' }}</td>\\r\\n                            <td>{{ item.factura ? 'Si' : 'No' }}</td>\\r\\n                            <td>{{ item.comentarios }}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                    <tfoot>\\r\\n                        <tr>\\r\\n                            <td colspan=\\\"9\\\" class=\\\"text-right\\\"><strong>TOTAL EGRESO: {{ total_egreso | currency:'MXN' }}</strong></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td colspan=\\\"9\\\" class=\\\"text-right\\\">\\r\\n                                <button (click)='descargarCSV(ordenes, \\\"Permiso Egreso por Órdenes en Taller\\\", true)' class='btn btn-sm btn-success'><i class='fa fa-excel'></i> Descargar como CSV</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tfoot>\\r\\n                </table>\\r\\n\\r\\n            </div>\\r\\n        </ba-card>\\r\\n    </div>\\r\\n    <div class='row'>\\r\\n        <div class='col-sm-2' *ngIf=\\\"backpage\\\">\\r\\n            <button (click)='backPage()' class='btn btn-primary'><i class='fa fa-arrow-left'></i> Regresar</button>\\r\\n        </div>\\r\\n        <div class='col-sm-2'>\\r\\n            <button title='Imprimir Reporte' (click)='printReporte(data)' class='btn btn-info'><i class='fa fa-print'></i> Imprimir Reporte</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/reportes/components/permisotaxis-reporte/permisotaxis-reporte.html\n// module id = 1881\n// module chunks = 0","module.exports = \"<div class='widgets'>\\r\\n    <div class='row'>\\r\\n        <ba-card title='Listado' baCardClass='with-scroll' class='data-table-container'>\\r\\n            <div class='panel panel-default'>\\r\\n                <table class='table table-striped' [mfData]='data | nombreDataFilter : filterQuery1' #mf='mfDataTable' [mfRowsOnPage]='rowsOnPage' [(mfSortBy)]='sortBy' [(mfSortOrder)]='sortOrder'>\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style='width: 33%'>\\r\\n                                <mfDefaultSorter by='persona_nombre'>Chofer</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 33%'>\\r\\n                                <mfDefaultSorter by='liquidacion_fecha'>Fecha de Liquidación</mfDefaultSorter>\\r\\n                            </th>\\r\\n                            <th style='width: 33%'>\\r\\n                                <mfDefaultSorter by='estado_estado_idestado'>Estado de Liquidación</mfDefaultSorter>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor='let item of mf.data;  let i = index'>\\r\\n                            <td>{{ item.persona_nombre }}</td>\\r\\n                            <td>{{ item.liquidacion_fecha }}</td>\\r\\n                            <td>{{ item.estado_estado_idestado }}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                    <tfoot>\\r\\n                        <tr>\\r\\n                            <td colspan='5'>\\r\\n                                <mfBootstrapPaginator [rowsOnPageSet]='[5,10,15]'></mfBootstrapPaginator>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tfoot>\\r\\n                </table>\\r\\n            </div>\\r\\n        </ba-card>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/reportes/components/reportes-table/reportes-table.html\n// module id = 1882\n// module chunks = 0","module.exports = \"<div class='widgets'>\\r\\n    <div class='row'>\\r\\n        <ba-card title='Listado' baCardClass='with-scroll' class='data-table-container'>\\r\\n            <div class='panel panel-default'>\\r\\n                <div class=\\\"panel-heading\\\" *ngIf=\\\"backpage\\\"><h2>Bitácora de ingresos y egresos para taller <strong>{{ taller }}</strong></h2></div>\\r\\n                \\r\\n                <table class='table table-striped'>                     \\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <td colspan='1'>\\r\\n                                Desde Fecha:\\r\\n                                <input class='form-control' #fechaDesde type=\\\"date\\\"/>\\r\\n                            </td>\\r\\n                            <td colspan='1'>\\r\\n                                Hasta Fecha:\\r\\n                                <input class='form-control' #fechaHasta type=\\\"date\\\"/>\\r\\n                            </td>\\r\\n                            <td colspan='1'>\\r\\n                                <br>\\r\\n                                <button class='btn btn-sm btn-info' (click)='filtrarFechas(fechaDesde.value, fechaHasta.value)' >Filtrar por Fechas</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                </table>\\r\\n                <div class=\\\"panel-heading\\\"><h4>Ingresos por Órdenes</h4></div>\\r\\n                <table class='table table-striped'>                     \\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style='width: 33%'>\\r\\n                                <span title='idorden'>Id Orden</span>\\r\\n                            </th>\\r\\n                            <th style='width: 33%'>\\r\\n                                <span title='orden_fecha'>Orden Fecha</span>\\r\\n                            </th>\\r\\n                            <th style='width: 33%'>\\r\\n                                <span title='orden_total'>Orden Total</span>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor='let item of orden;  let i = index'>\\r\\n                            <td>{{ item.idorden }}</td>\\r\\n                            <td>{{ item.orden_fecha | date:'dd/MM/y' }}</td>\\r\\n                            <td>{{ item.orden_total | currency: 'MXN' }}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                    <tfoot>\\r\\n                        <tr>\\r\\n                            <td colspan=\\\"3\\\" class=\\\"text-right\\\"><strong>TOTAL: {{ total_orden_ingreso | currency:'MXN' }}</strong></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td colspan=\\\"3\\\" class=\\\"text-right\\\">\\r\\n                                <button (click)='descargarCSV(orden, \\\"Taller Ingresos por Órdenes\\\", true)' class='btn btn-sm btn-success'><i class='fa fa-excel'></i> Descargar como CSV</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tfoot>\\r\\n                </table>\\r\\n\\r\\n                <div class=\\\"panel-heading\\\"><h4>Egresos por Compra de Refacciones para Órdenes Pagadas</h4></div>\\r\\n                <table class='table table-striped'>\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style='width: 16%'>\\r\\n                                <span title='refaccion'>Refacción</span>\\r\\n                            </th>\\r\\n                            <th style='width: 16%'>\\r\\n                                <span title='refaccion'>Orden Folio</span>\\r\\n                            </th>\\r\\n                            <th style='width: 16%'>\\r\\n                                <span title='refaccion'>Fecha de Ingreso a Orden</span>\\r\\n                            </th>\\r\\n                            <th style='width: 16%'>\\r\\n                                <span title='refaccion_precioCompra'>Refacción Precio Compra</span>\\r\\n                            </th>\\r\\n                            <th style='width: 16%'>\\r\\n                                <span title='refaccion_cantidad'>Refacción Cantidad</span>\\r\\n                            </th>\\r\\n                            <th style='width: 16%'>\\r\\n                                <span title='refaccion_cantidad'>Gasto Total</span>\\r\\n                            </th>\\r\\n                            <th style='width: 16%'>\\r\\n                                <span title='refaccion_preveedor'>Refacción Proveedor</span>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor='let item of refaccion;  let i = index'>\\r\\n                            <td>{{ item.refaccion }}</td>\\r\\n                            <td>{{ item.folio }}</td>\\r\\n                            <td>{{ item.refaccion_orden | date:'dd/MM/y' }}</td>\\r\\n                            <td>{{ item.refaccion_precioCompra | currency: 'MXN' }}</td>\\r\\n                            <td>{{ item.refaccion_cantidad }}</td>\\r\\n                            <td>{{ item.refaccion_cantidad * item.refaccion_precioCompra | currency: 'MXN' }}</td>\\r\\n                            <td>{{ item.refaccion_preveedor }}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                    <tfoot>\\r\\n                        <tr>\\r\\n                            <td colspan=\\\"7\\\" class=\\\"text-right\\\"><strong>TOTAL: {{ total_refaccion_egreso | currency:'MXN' }}</strong></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td colspan=\\\"7\\\" class=\\\"text-right\\\">\\r\\n                                <button (click)='descargarCSV(refaccion, \\\"Taller Egresos por Compra de Refacciones\\\", true)' class='btn btn-sm btn-success'><i class='fa fa-excel'></i> Descargar como CSV</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tfoot>\\r\\n                </table>\\r\\n\\r\\n                <div class=\\\"panel-heading\\\"><h4>Egresos por Conceptos</h4></div>\\r\\n                <table class='table table-striped'>\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style='width: 24%'>\\r\\n                                <span title='egresoconcepto_fecha'>Egreso Concepto Fecha</span>\\r\\n                            </th>\\r\\n                            <th style='width: 22%'>\\r\\n                                <span title='egresoconcepto_total'>Egreso Concepto Total</span>\\r\\n                            </th>\\r\\n                            <th style='width: 30%'>\\r\\n                                <span title='egreso_nombre'>Concepto</span>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor='let item of egresoconcepto;  let i = index'>\\r\\n                            <td>{{ item.egresoconcepto_fecha | date:'dd/MM/y' }}</td>\\r\\n                            <td>{{ item.egresoconcepto_total | currency:'MXN' }}</td>\\r\\n                            <td>{{ item.egreso_nombre }}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                    <tfoot>\\r\\n                        <tr>\\r\\n                            <td colspan=\\\"3\\\" class=\\\"text-right\\\"><strong>TOTAL: {{ total_egresoconcepto_egreso | currency:'MXN' }}</strong></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td colspan=\\\"3\\\" class=\\\"text-right\\\">\\r\\n                                <button (click)='descargarCSV(egresoconcepto, \\\"Taller Egresos por Conceptos\\\", true)' class='btn btn-sm btn-success'><i class='fa fa-excel'></i> Descargar como CSV</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tfoot>\\r\\n                </table>\\r\\n                <div class=\\\"panel-heading\\\"><h4>Totales</h4></div>\\r\\n                <table class='table table-striped'>\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style='width: 24%'>\\r\\n                                <span title='egresoconcepto_fecha'>Total Ingreso</span>\\r\\n                            </th>\\r\\n                            <th style='width: 22%'>\\r\\n                                <span title='egresoconcepto_total'>Total Egreso</span>\\r\\n                            </th>\\r\\n                            <th style='width: 30%'>\\r\\n                                <span title='egreso_nombre'>Ganancia</span>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td><strong>{{ total_ingreso | currency:'MXN' }}</strong></td>\\r\\n                            <td><strong>{{ total_egreso | currency:'MXN' }}</strong></td>\\r\\n                            <td><strong>{{ ganancia | currency:'MXN' }}</strong></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </ba-card>\\r\\n    </div>\\r\\n    <div class='row'>\\r\\n        <div class='col-sm-2' *ngIf=\\\"backpage\\\">\\r\\n            <button (click)='backPage()' class='btn btn-primary'><i class='fa fa-arrow-left'></i> Regresar</button>\\r\\n        </div>\\r\\n        <div class='col-sm-2'>\\r\\n            <button title='Imprimir Reporte' (click)='printReporte(data)' class='btn btn-info'><i class='fa fa-print'></i> Imprimir Reporte</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/reportes/components/taller-bitacora/taller-bitacora.html\n// module id = 1883\n// module chunks = 0","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/reportes/reportes.html\n// module id = 1884\n// module chunks = 0"],"sourceRoot":""}